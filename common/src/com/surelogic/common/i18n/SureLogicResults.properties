#  XXXXX                          XXXXX                      X
# X     X                           X
# X                                 X
# X       XX  XX  XXX XX   XXXXX    X      XXXXX   XXXXXX  XXX     XXXXX
#  XXXXX   X   X    XX  X X     X   X     X     X X    X     X    X     X
#       X  X   X    X     XXXXXXX   X     X     X X    X     X    X
#       X  X   X    X     X         X     X     X X    X     X    X
# X     X  X  XX    X     X     X   X   X X     X  XXXXX     X    X     X
#  XXXXX    XX XX XXXXX    XXXXX  XXXXXXX  XXXXX       X   XXXXX   XXXXX
#                                                      X
#                                                  XXXX
#

#------------------------------------------------------------------------
# JSure Analysis Result Messages
#
# Please keep in numerical order
#------------------------------------------------------------------------

#
# For categories and analysis results folders special processing is done
# on the string just before it is displayed in the user interface. It occurs
# after the normal String.format substitution of arguments into the format
# string. Special processing is based upon the number of children, c, of
# the folder or category.
#
# 1. "{{{one|||many}}}" if c == 1 this results in "one",
#    if c > 1 this results in "many".
# 2 "###" is changed to c.
#
# Examples:
# "### java.lang.Thread subtype instance {{{created|||creations}}}"
# when c=3 becomes "3 java.lang.Thread subtype instance creations"
# when c=1 becomes "1 java.lang.Thread subtype instance created"
#
# "Concurrency ({{{one issue|||### issues}}})"
# when c=1  "Concurrency (one issue)"
# when c=50 "Concurrency (50 issues)"
#
# "### java.lang.Runnable subtype instance {{{created|||creations}}} - not{{{ a|||}}} Thread{{{|||s}}}"
# when c=1 "1 java.lang.Runnable subtype instance created - not a Thread"
# when c=2 "2 java.lang.Runnable subtype instance creations - not Threads"

# Thread effects (0000)
result.00001=No threads started within %s
result.00002=Thread effect declaration prohibits: %s
result.00003=Call "%s" promises to start nothing
result.00004=Call "%s" does not promise to start nothing

# Drop sea/infrastructure (0001)
result.00010=(proposed promise)  @%s(%s)
result.00011=%s %s
result.00012=%s
result.00013=%s
result.00014=Immutable on %s
result.00015=lock %s
result.00016=%s
result.00018=(proposed promise)  @%s
result.00019=%s
result.00020=%s on %s
result.00021=(analysis result vouched for) %s
result.00022=%s on parameter '%s' of %s
result.00023=%s on receiver of %s
result.00024=%s on return value of %s
result.00025=SLOC metrics about %s

# Concurrency detector (0005)
category.00050=### java.lang.Thread subtype instance {{{created|||creations}}}
category.00051=### java.lang.Runnable subtype instance {{{created|||creations}}} - not{{{ a|||}}} Thread{{{|||s}}}
category.00052=### thread {{{started|||starts}}}

result.00050=%s instance created
result.00051=%s started


# Static State Detector (0007)
category.00070=### public static mutable field{{{|||s}}}
category.00071=### public static Object-typed field{{{|||s}}}
category.00072=### public static mutable array{{{|||s}}}
category.00073=### static mutable field{{{|||s}}}
category.00074=### static Object-typed field{{{|||s}}}
category.00075=### static mutable array{{{|||s}}}

result.00070=static mutable field of type %s
result.00071=static mutable array of type %s
result.00072=static Object-typed field of type %s

# Various drops and globals (0010)
category.00100=Regions ({{{one model|||### models}}})
category.00101=Concurrency ({{{one model|||### models}}})
category.00102=### lock precondition{{{|||s}}}
category.00103=Uniqueness ({{{one model|||### models}}})
category.00104=Effects ({{{one model|||### models}}})
category.00105=Null values ({{{one model|||### models}}})
category.00106=Thread effects ({{{one model|||### models}}})
category.00107=Thread roles analysis
category.00108=Regions marked for TRole reporting
category.00109=Thread Role Constrained Regions
category.00110=OBSOLETE
category.00111=Scoped promises ({{{one model|||### models}}})
category.00112=Vouches ({{{one model|||### models}}})
category.00113=OBSOLETE
category.00114=OBSOLETE
category.00115=OBSOLETE
category.00116=OBSOLETE
category.00117=OBSOLETE
category.00118=Modules ({{{one model|||### models}}})
category.00119=Utility classes ({{{one model|||### models}}})
category.00120=Singleton classes ({{{one model|||### models}}})
category.00121=Annotation bounds ({{{one model|||### models}}})
category.00350=Static structure ({{{one model|||### models}}})
  
result.00100=RegionLock("%s is %s protects %s") on %s
result.00101=PolicyLock("%s is %s") on %s
result.00102=%s on %s
result.00103=UniqueInRegion("%s") on %s
result.00104=AssumedFinal on %s
result.00105=Borrowed("%s") on %s
result.00106=Immutable on %s
result.00107=InRegion("%s") on %s
result.00108=InRegion("%s into %s")
result.00109=NotThreadSafe on %s
#result.00110=NotUnique on %s  ### OBSOLETE
result.00111=ReturnsLock("%s") on %s
result.00112=ThreadSafe on %s
# result.00113=SingleThreaded on %s  ### OBSOLETE
result.00114=Starts("nothing") on %s
result.00115=Unique on %s
result.00116=Unique("%s") on %s
result.00117=Region("%s%s %s")
result.00118=Containable on %s
result.00119=Containable(implementationOnly=true, verify=false) on %s
result.00120=Immutable(implementationOnly=true, verify=false) on %s
result.00121=ThreadSafe(implementationOnly=true, verify=false) on %s
result.00122=NotContainable on %s
result.00123=Mutable on %s
result.00124=Vouch("%s") on %s
result.00125=Utility on %s
result.00126=Containable(implementationOnly=true) on %s
result.00127=Immutable(implementationOnly=true) on %s
result.00128=ThreadSafe(implementationOnly=true) on %s
result.00129=Containable(verify=false) on %s
result.00130=Immutable(verify=false) on %s
result.00131=ThreadSafe(verify=false) on %s
result.00132=Control flow of %s
result.00133=Singleton on %s
result.00134=BorrowedInRegion("%s") on %s
result.00135=Instantiations of bounded generic type %s
result.00136=%s on %s
result.00137=Annotation bound %s on type formal %s
result.00138=RegionEffects("%s") on %s

# Effects (0015)
category.00150=### non-trivial effect{{{|||s}}} in a class initializer

result.00150="%s" not accounted for by declared effect(s)
result.00151="%s" checked by "%s"
result.00152=Empty effects trivially satisfy declared effects
result.00153="%s" checked by constructor rule: writes to a newly created object are invisible
result.00154=Formal parameter "%s" bound to actual "%s"
#result.00155=No effects from calling %s
result.00156=%s.<clinit> has effect "%s" from %s
result.00157=Called method declares no effect
result.00158=Receiver is an immutable reference
result.00159=Cannot modify the state of an object referenced by a @ReadOnly reference 
result.00160=Field %s is final
result.00161=The value of variable %s may originate from %s
result.00162=Region %s of object referenced by %s is mapped into region %s of the object referenced by %s
result.00163=Effect derived from anonymous class initialization effect %s
result.00164=Effect on a region of the qualified receiver %s was converted to an effect on any instance of class %s
result.00165=Effect on a region of the object referenced by %s was converted to an effect on any instance of class %s
result.00166=Receiver reference is null
result.00167=Effect on a region of an object created during execution of the method is not visible to the caller
result.00168=Effect on a region of an object uniquely returned by a method is not visible to the caller
result.00169=Effect converted from write to read because the iterator is never used to modify the original collection
result.00170=Effect on a region of an object referenced by a unique parameter is not visible to the caller
result.00171=No effects on %s

# Lock assurance (0020)
category.00200=### lock field{{{|||s}}} less visible than the region{{{|||s}}} being protected
category.00201=### protected reference{{{|||s}}} to a possibly shared unprotected object; possible race condition detected
category.00202=### unprotected field access{{{|||es}}}; possible race condition detected
category.00203=### protected field access{{{|||es}}}
category.00204=### lock precondition{{{|||s}}} satisfied
category.00205=### lock precondition{{{|||s}}} not satisfied; possible race conditions enabled
category.00206=### unprotected indirect field access{{{|||es}}}; possible race condition detected
category.00207=### protected indirect field access{{{|||es}}}
category.00208=### return statement{{{|||s}}} returning the correct lock
category.00209=### return statement{{{|||s}}} possibly returning the wrong lock
category.00210=### unidentifiable lock{{{|||s}}}; what is the name of the lock? what state is being protected?
category.00211=### synchronized block{{{|||s}}} not protecting any state; what state is being protected?
category.00212=### non-final lock expression{{{|||s}}}; analysis cannot determine which lock is being acquired
category.00213=### redundant lock acquisition{{{|||s}}}
category.00214=### mixed java.util.concurrent/intrinsic locking usage{{{|||s}}}
category.00215=### calls to methods masquerading as java.util.concurrent.Lock methods
category.00216=### lock()\u2013unlock() matche{{{|||s}}}
category.00217=### unsupported lock model{{{|||s}}}
category.00218=### formal parameter{{{|||s}}} that should be declared final

result.00200=single-threaded constructor supported
result.00201=Field reference "%s" may be to a shared unprotected object
result.00202=Receiver "%s" may be a shared unprotected object
result.00203=Lock "%1$s" held when accessing %2$s
result.00204=Lock "%1$s" held as "%3$s" when accessing %2$s
result.00205=Lock "%1$s" not held when accessing %2$s
result.00206=Lock "%1$s", needed for accessing %2$s, is not held within the anonymous class and cannot be resolved in the calling context; lock must be held within the anonymous class
result.00207=Lock "%1$s" held when invoking %2$s; precondition satisfied
result.00208=Lock "%1$s" held as "%3$s" when invoking %2$s; precondition satisfied
result.00209=Lock "%1$s" not held when invoking %2$s; precondition unsatisfied
result.00210=Lock specification "%s" cannot be resolved in the calling context for %s; precondition unsatisfied
result.00211=Lock "%1$s" held when invoking %2$s
result.00212=Lock "%1$s" held as "%3$s" when invoking %2$s
result.00213=Lock "%1$s" not held when invoking %2$s
result.00214=Return statement correctly returns lock "%s"
result.00215=Return statement expected to return lock "%s"
result.00216=Synchronized method %s: "this" is not identifiable as a programmer-declared lock
result.00217=Synchronized method %s: "%s.class" is not identifiable as a programmer-declared lock
result.00218=Locks %s not needed by body of synchronized block
result.00219=Lock expression "%s" is not final
result.00220=Lock expression "%s" does not name a programmer-declared lock; consider declaring what state is protected by the referenced lock
result.00221=Acquisition of lock "%s" may be redundant
result.00222=Using a java.util.concurrent.locks lock object "%s" in a synchronized statement
result.00223="%s" does not call a method from java.util.concurrent.locks.Lock
result.00224="%s" does not call a method from java.util.concurrent.locks.ReadWriteLock
result.00225=The object referenced by "%s" is not a known lock, but its field %s is a java.util.concurrent lock.
result.00226=The object referenced by "%s" is not a known lock, but its fields %s are java.util.concurrent locks.
result.00227=The object referenced by "%s" is not a known lock, but its field "%s" is declared to be java.util.concurrent lock "%s".
result.00228=%s() call has a different number of matching unlock() calls along different control paths
result.00229=%s() call has no matching unlock() calls
result.00230=%s() call has matching unlock() call at line %s
result.00231=unlock() call has a different number of matching lock() calls along different control paths
result.00232=unlock() call has no matching lock() calls
result.00233=unlock() call has matching %s() call at line %s
result.00234=Method effect %s affects region %s of %s which is aggregated into region %s
result.00235=Constructor "%s" is single-threaded
result.00236=Analyzed on behalf of constructor %s
result.00237=Enclosing constructor %s is single-threaded
result.00238=Enclosing constructor %s cannot be proven to be single-threaded
result.00239=Field Declaration: %s
result.00240=Assuming lock %s is held
result.00241=Intrinsic lock %s is held
result.00242=java.util.concurrent lock %s is held
result.00243=Lock "%1$s", needed for invoking %2$s, is not held within the anonymous class and cannot be resolved in the calling context; lock must be held within the anonymous class; precondition unsatisfied
result.00244=Lock "%1$s", needed for invoking %2$s, is not held within the anonymous class and cannot be resolved in the calling context; lock must be held within the anonymous class
result.00245=Acting as if lock "%1$s" were held when accessing %2$s (occurs within a class initializer)
result.00246=Acting as if lock "%1$s" were held when accessing %2$s (occurs within a thread-confined constructor)
result.00247=Acting as if lock "%1$s" were held as "%3$s" when accessing %2$s (occurs within a class initializer)
result.00248=Acting as if lock "%1$s" were held as "%3$s" when accessing %2$s (occurs within a thread-confined constructor)
result.00249=Acting as if lock "%1$s" were held when invoking %2$s (occurs within a class initializer); precondition satisfied
result.00250=Acting as if lock "%1$s" were held when invoking %2$s (occurs within a thread-confined constructor); precondition satisfied
result.00251=Acting as if lock "%1$s" were held as "%3$s" when invoking %2$s (occurs within a class initializer); precondition satisfied
result.00252=Acting as if lock "%1$s" were held as "%3$s" when invoking %2$s (occurs within a thread-confined constructor); precondition satisfied
result.00253=Acting as if lock "%1$s" were held when invoking %2$s (occurs within a class initializer)
result.00254=Acting as if lock "%1$s" were held when invoking %2$s (occurs within a thread-confined constructor)
result.00255=Acting as if lock "%1$s" were held as "%3$s" when invoking %2$s (occurs within a class initializer)
result.00256=Acting as if lock "%1$s" were held as "%3$s" when invoking %2$s (occurs within a thread-confined constructor)
problem.00257=Lock field "%s" (%s) is less visible than region "%s" (%s); consider protecting a less visible region or adding a lock getter method
#result.00258=Sorry, analysis does not yet support the use of qualified receivers as lock objects
problem.00258=Sorry, analysis does not yet support the use of qualified receivers as lock objects
result.00259=Programmer vouches that field %s is final
result.00260=Programmer vouches that field %s is final: "%s" 
result.00261=Formal parameter "%s" is modified by the method: cannot assure that the lock %s "%s" protects the correct object
result.00262=Formal parameter "%s" used in the lock %s "%s" should be declared final to prevent the reference to the protected object from changing
result.00263=Constructor is thread-confined
result.00264=Constructor is not thread-confined
result.00265=Receiver is not aliased
result.00266=Constructor starts no threads and doesn't write to any pre-existing objects


# Uniqueness assurance (0030)
category.00300=### Unique precondition{{{|||s}}} satisfied
category.00301=### Unique precondition{{{|||s}}} unsatisfied
category.00302=### Uniqueness analysis timeout
category.00303=### control flow segment{{{|||s}}} where Uniqueness analysis is long running

result.00300=Control flow of %s %s
result.00301=Unique return value of call %s
result.00302=Borrowed parameters of call %s
result.00303=Unique parameters of call %s
result.00304=Effects of call %s
result.00305=Assurance conservatively depends on other annotations
result.00306=Assurance conservatively depends on the unique fields accessed in method %s
result.00307=Assurance conservatively depends on the unique parameters of method %s
result.00308=Uniqueness preconditions satisfied when calling %s
result.00309=Uniqueness preconditions not satisfied when calling %s
result.00310=May depend on unique return value of %s
result.00311=May depend on unique object constructed by %s  
result.00312=Analysis timed out after %s seconds on %s: Gave up after %s seconds
result.00313=Analysis took longer than %s seconds on %s: Analysis took %s seconds

# Side-effecting uniqueness (320)
result.00318=Local variable %s is assigned a buried unique reference by %s
result.00319=Borrowed reference %s passed to a borrowed parameter of method %s%s

result.00320=Read of compromised or undefined unique field%s
result.00321=Method may read a compromised or undefined unique field%s
result.00322=Lost all references to an object whose unique field was compromised or made undefined before the field could be reassigned%s
# OBSOLETE?
result.00323=Compromised by %s
result.00324=Made undefined by %s
result.00325=Read of buried unique reference%s
result.00326=Buried by %s
result.00327=Actual parameter is a shared reference%s
result.00328=May return a shared reference: Method has a bad return statement%s
result.00329=Cannot assign a shared reference to a unique field%s
result.00330=Actual parameter is a borrowed reference%s
result.00331=May return a borrowed reference: Method has a bad return statement%s
result.00332=Cannot assign a borrowed reference to a unique field%s
result.00333=Aliased to a unique field/variable%s
result.00334=Aliased by being returned as unique: Method has a bad return statement%s
result.00335=Aliased to a shared field/variable%s
result.00336=Aliased by being returned as shared: Method has a bad return statement%s 
result.00337=Actual parameter is undefined
result.00338=Undefined by %s being passed to a @Unique parameter
result.00339=Buried by field %s being read during evaluation of the method's actual parameters
result.00340=Unique field %s, made undefined by evaluating the actual arguments, may be read as an effect of the call %s 
result.00341=Implementation respects uniqueness invariants
result.00342=Borrowed postcondition is satisfied
result.00343=Actual parameter is a unique reference%s
result.00344=Returns a unique reference%s
result.00345=Unique reference assigned to the unique field%s
result.00346=Actual parameter is null%s
result.00347=Returns null%s
result.00348=Null assigned to the unique field%s
result.00349=Assurance depends on the control flow of methods in project "%s"
# Have to skip over to 00360...
result.00360=Return of buried unique reference%s
result.00361=Read of buried unique reference via caching of external variable "%s" during construction of local class%s
result.00362=Compromised by assignment to array element "%s"
result.00363=Compromised by assignment to shared field "%s"
result.00364=Compromised by assignment to an element of the varargs array "{ %s }"
result.00365=Compromised by assignment to an element of the new array "%s"
result.00366=Compromised by being thrown
result.00367=Compromised by assignment to the hidden field for "%s" of a local class instance
result.00368=Compromised by being aliased to the receiver and then being used as the outer object of a local class instance
result.00369=Compromised by being passed to a shared receiver
result.00370=Compromised by being passed as the outer object to an inner class instance
result.00371=Compromised by being passed to the shared formal parameter "%s"
result.00372=Compromised by being assigned to the implicit qualified receiver
# replaces 321
result.00373=Method may read a compromised or undefined %s field%s
result.00374=Read of undefined reference%s
result.00375=Made undefined because a field of an object borrowed by the referenced object is read
result.00376=Made undefined because a field of an object borrowed by the referenced object is written
result.00377=Made undefined because a field of an object borrowed by the referenced object is affected by a method call
result.00378=Cannot read a borrowed field of an object except in methods of class
# replaces 322
result.00379=Lost all references to an object whose %s field was compromised or made undefined before the field could be reassigned%s
# replaces 320
result.00380=Read of compromised or undefined %s field%s

# Layers analysis (0035)
result.00350=Prohibited reference to %s
result.00351=All types referenced by %s are permitted
result.00352=Permitted reference from %s 
result.00353=Layer creates a cycle by referring to %s
result.00354=This type may be involved
result.00355=Typeset %s may be involved


# ThreadSafe analysis (0040)
result.00400=Supertype %s is thread safe
result.00401=Trivially thread safe: interface has no state
result.00402=Field %s is thread safe: vouched to be
result.00403=Field %s is thread safe: programmer vouches "%s"
result.00404=Field %s is thread safe
result.00405=Field %s is not thread safe
result.00406=Field is protected from concurrent access
result.00407=Field is not protected from concurrent access
result.00408=Field is final
result.00409=Field is not final
result.00410=Field is volatile
result.00411=Field is not volatile
result.00412=Field is protected by lock %s
result.00413=Field is not protected by a lock
result.00414=Referenced object is protected from concurrent access
result.00415=Referenced object is not protected from concurrent access
result.00416=Declared type is primitive: %s
result.00417=Declared type is not primitive: %s
result.00418=Declared type is thread safe: %s
result.00419=Declared type is not thread safe: %s
result.00420=Field is initialized to an object whose class implementation is thread safe
result.00421=Referenced object is contained
result.00422=Referenced object is not contained
result.00423=Declared type is containable: %s
result.00424=Declared type is not containable: %s
result.00425=Field is unique
result.00426=Field is not unique
result.00427=Aggregation destination region %s is protected by lock %s
result.00428=Aggregation destination region %s is not protected by a lock
result.00429=Field is final and initialized to an object whose class implementation is containable
result.00430=Trivially thread safe: interface contains only static fields
result.00431=Trivially thread safe: class does not contain any static fields
result.00432=Declared type is containable: vouched to be
result.00433=Declared type is containable: programmer vouches "%s"

# Containable messages (0045)
result.00450=Supertype %s is containable
result.00451=Constructor %s contains the created object: return value is declared to unique
result.00452=Constructor %s contains the created object: receiver is declared to be borrowed
result.00453=Constructor %s does not contain the created object: return value is not declared to be unique
result.00454=Method %s does contain its receiver: receiver is declared to be borrowed
result.00455=Method %s does not contain its receiver: receiver is not declared to be borrowed
result.00456=Field %s is contained: type is primitive
result.00457=Field %s is contained: vouched to be
result.00458=Field %s is contained: programmer vouches "%s"
result.00459=Field %s is contained: referenced object is unique, aggregated, and containable
result.00460=Field %s is not contained
result.00461=Field is unique
result.00462=Field is not unique
result.00463=Referenced object is containable
result.00464=Referenced object is not containable
result.00465=Declared type is containable: %s
result.00466=Declared type is not containable: %s
result.00467=Field is final and initialized to an object whose class implementation is containable
result.00468=Trivially containable: interface is empty
result.00469=Trivially containable: interface contains only static fields

# Immutable messages (0048)
result.00478=Trivially immutable: class does not contain any static fields
result.00479=Trivially immutable: interface contains only static fields
result.00480=Supertype %s is immutable
result.00481=Trivially immutable: interface has no state
result.00482=Field %s is immutable: vouched to be
result.00483=Field %s is immutable: programmer vouches "%s"
result.00484=Field %s is immutable
result.00485=Field %s is not immutable
result.00486=Field is final
result.00487=Field is not final
result.00488=Referenced object is immutable
result.00489=Referenced object is not immutable
result.00490=Declared type is primitive: %s
result.00491=Declared type is not primitive: %s
result.00492=Declared type is immutable: %s
result.00493=Declared type is not immutable: %s
result.00494=Initialized to an object whose class implementation is immutable

# Annotation Bound messages 
result.00495=Parameterized type %s (occurs as %s)
result.00496=Type %s satisfies the annotation bound %s on type formal %s
result.00497=Type %s does not satisfy the annotation bound %s on type formal %s
result.00498=
result.00499=Type formal %s must be instantiated with an actual type that is %s 
result.00550=Type never parameterized
result.00551=Actual type has no type annotations
result.00552=Actual type may have type annotation @%s
result.00553=Annotation bounds are satisfied: vouched to be
result.00554=Annotation bounds are satisfied: programmer vouches "%s"

# Testing Analyses (0050)
category.00500=### BCACategory
category.00510=### CMCategory
category.00520=### LVCategory
category.00530=### Non Null
category.00540=### Types

result.00500=%s binds to %s

result.00510=Calls %s from line %d

result.00520=%s: Local %s; External %s

result.00530=%s is @NonNull
result.00531=%s is @Nullable
result.00532=this is %s
result.00533=Field %s is not definitely assigned
result.00534=Field %s is definitely assigned

result.00540=Parameter %s may alias parameter %s

# Utility Analysis (0060)
result.00600=Class is public
result.00601=Class is not public
### OBSOLETE
#result.00602=Class extends java.lang.Object
#result.00603=Class does not extend java.lang.Object
#result.00604=Class does implement any interfaces
#result.00605=Class implements interfaces
result.00606=Declares static field %s
result.00607=Declares non-static field %s
result.00608=Declares static method %s
result.00609=Declares non-static method %s
result.00610=Does not declare a private no-argument constructor
result.00611=Declares more than one constructor
result.00612=Constructor is not private
result.00613=Constructor is not no-argument
result.00614=Declares a single private no-argument constructor
result.00615=Constructor does more than call the super constructor
result.00616=Constructor only invokes the super constructor
result.00617=Constructor throws AssertionError
result.00618=An instance of the class is created
result.00619=Class is subclassed
result.00620=Consider declaring the class final
result.00621=Constructor body is compiled or missing: cannot assure its actions


# Singleton Analysis (00650)
result.00650=Enumeration has exactly one element %s
result.00651=Enumeration has more than one element
result.00652=Enumeration has no elements
result.00653=Class is final
result.00654=Class is not final
result.00655=Constructor %s is private
result.00656=Constructor %s is not private
result.00657=Singleton reference field initialized
result.00658=Extra instance created
result.00659=Class has exactly one public static final field of type %s: %s
result.00660=Class has exactly one private static final field of type %s: %s
result.00661=Class has no public static final field of type %s
result.00662=Class has no private static final field of type %s
result.00663=Class has more than one field of type %s
result.00664=Method body is compiled or missing: cannot assure its actions
result.00665=Found public static getter method %s
result.00666=Class has private singleton instance but no public static getter method
result.00667=Instance field is transient when the class is serializable
result.00668=Instance field must be transient when the class is serializable
result.00669=Body of readResolve() must be a single return statement 
result.00670=Return statement of readResolve() does not return the singleton reference field %s
result.00671=Return statement of readResolve() returns the singleton reference field %s
result.00672=Serializable singleton classes must have a readResolve() method

# Scan Exclusion Warnings (00700)
result.00700=Excluded source folder '%s' does not exist in the project %s. Its source folders are %s.
result.00701=Excluded package specification '%s' does not exclude any actual packages in the project %s.

# Equality Analysis (00750)
result.00750=Overrides %s(%s)  at  %s
result.00751=Uses %s(%s) implementation from java.lang.Object
result.00752=Conflicts with @%s
result.00753=Should be abstract, since it has subclasses, e.g. %s
result.00754=Trivially a value object: %s is an interface
result.00755=Trivially a reference object: %s is an interface
result.00756=Does not match @%s annotation on supertype 
result.00757=Trivially a value object: %s is an abstract class
result.00758=%s should not be compared using == or !=
result.00759=Method toString() has only read effects
result.00760=Method toString() has a write effect
result.00761=Write effect: %s
result.00762=May read an object other than the receiver: %s
result.00763=Enumerations may not be @%s because they are implicitly @ReferenceObject
result.00764=Enumeration %s is implicitly @ReferenceObject
result.00765=Enumerations may not implement @ValueObject interfaces because they are implicitly @ReferenceObject
result.00766=Method is unannotated: Using default annotation @RegionEffects("writes All")

# Structure Analysis (00800)
result.00800=Trivially satisfied because there are no known overrides
result.00801=Invoked in %s
result.00802=Not invoked in %s

# Nullable analysis (00900)
problem.00900=Cannot be both %s and %s
problem.00901=@Raw may only be used to modify a class type
problem.00902=%s is not a superclass of %s
problem.00903=No such type as %s

result.00900=Definitely assigned in constructor %s
result.00901=Not definitely assigned in constructor %s

