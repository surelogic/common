#  XXXXX                          XXXXX                      X
# X     X                           X
# X                                 X
# X       XX  XX  XXX XX   XXXXX    X      XXXXX   XXXXXX  XXX     XXXXX
#  XXXXX   X   X    XX  X X     X   X     X     X X    X     X    X     X
#       X  X   X    X     XXXXXXX   X     X     X X    X     X    X
#       X  X   X    X     X         X     X     X X    X     X    X
# X     X  X  XX    X     X     X   X   X X     X  XXXXX     X    X     X
#  XXXXX    XX XX XXXXX    XXXXX  XXXXXXX  XXXXX       X   XXXXX   XXXXX
#                                                      X
#                                                  XXXX
#

#------------------------------------------------------------------------
# JSure Analysis Result Messages
#
# Please keep in numerical order
#------------------------------------------------------------------------
# Thread effects (0000)
result.00001=No threads started within %s
result.00002=Thread effect declaration prohibits: %s
result.00003=Call "%s" promises to start nothing
result.00004=Call "%s" does not promise to start nothing


# Concurrency detector (0005)
category.prefix.00050=java.lang.Thread subtype instance creation(s)
category.prefix.00051=java.lang.Runnable subtype instance creation(s) - not Thread
category.prefix.00052=thread start(s)

result.00050=%s instance created
result.00051=%s started


# Static State Detector (0007)
category.prefix.00070=public static mutable field(s)
category.prefix.00071=public static Object-typed field(s)
category.prefix.00072=public static mutable array(s)
category.prefix.00073=static mutable field(s)
category.prefix.00074=static Object-typed field(s)
category.prefix.00075=static mutable array(s)

result.00070=static mutable field of type %s
result.00071=static mutable array of type %s
result.00072=static Object-typed field of type %s


# Various drops and globals (0010)
category.postfix.00100=Regions
category.postfix.00101=Concurrency
category.prefix.00102=lock precondition(s)
category.postfix.00103=Uniqueness
category.postfix.00104=Effects
category.postfix.00105=Null values
category.postfix.00106=Thread effects
category.postfix.00107=Thread roles analysis
category.postfix.00108=Regions marked for TRole reporting
category.postfix.00109=Thread Role Constrained Regions
category.postfix.00110=Structure
category.postfix.00111=Scoped promises
category.postfix.00112=Vouches
category.postfix.00113=Scoped assumptions
category.postfix.00114=Modeling problems
category.postfix.00115=Javadoc warnings
category.postfix.00116=Convert to IR
category.postfix.00117=Uncategorized
category.postfix.00118=Modules
category.postfix.00149=unparented drops
  
result.00100=RegionLock %s is %s protects %s on %s
result.00101=PolicyLock %s is %s on %s
result.00102=%s on %s
result.00103=AggregateInRegion(%s) on %s
result.00104=AssumedFinal on %s
result.00105=Borrowed(%s) on %s
result.00106=Immutable on %s
result.00107=InRegion(%s) on %s
result.00108=InRegion(%s into %s)
result.00109=NotThreadSafe on %s
result.00110=NotUnique on %s
result.00111=ReturnsLock %s on %s
result.00112=ThreadSafe on %s
# result.00113=SingleThreaded on %s  ### OBSOLETE
result.00114=Starts(nothing) on %s
result.00115=Unique on %s
result.00116=Unique(%s) on %s
result.00117=Region %s%s %s
result.00118=Containable on %s
result.00119=Containable(implementationOnly=%b, verify=%b) on %s
result.00120=Immutable(implementationOnly=%b, verify=%b) on %s
result.00121=ThreadSafe(implementationOnly=%b, verify=%b) on %s
result.00122=NotContainable on %s
result.00123=Mutable on %s
result.00124=Vouch(%s) on %s

# Effects (0015)
category.prefix.00150=non-trivial effect(s) in a class initializer

result.00150="%s" not accounted for by declared effect(s)
result.00151="%s" checked by "%s"
result.00152=Empty effects trivially satisfy declared effects
result.00153="%s" checked by constructor rule: writes to a newly created object are invisible
result.00154=Parameter "%s" bound to "%s"
result.00155=No effects from calling %s
result.00156=%s.<clinit> has effect "%s" from %s


# Lock assurance (0020)
category.prefix.00200=lock field(s) less visible than the region(s) being protected
category.prefix.00201=protected reference(s) to a possibly shared unprotected object; possible race condition detected
category.prefix.00202=unprotected field access(es); possible race condition detected
category.prefix.00203=protected field access(es)
category.prefix.00204=lock precondition(s) satisfied
category.prefix.00205=lock precondition(s) not satisfied; possible race conditions enabled
category.prefix.00206=unprotected indirect field access(es); possible race condition detected
category.prefix.00207=protected indirect field access(es)
category.prefix.00208=return statement(s) returning the correct lock
category.prefix.00209=return statement(s) possibly returning the wrong lock
category.prefix.00210=unidentifiable lock(s); what is the name of the lock? what state is being protected?
category.prefix.00211=synchronized block(s) not protecting any state; what state is being protected?
category.prefix.00212=non-final lock expression(s); analysis cannot determine which lock is being acquired
category.prefix.00213=redundant lock acquisition(s)
category.prefix.00214=mixed java.util.concurrent/intrinsic locking usage(s)
category.prefix.00215=calls to methods masquerading as java.util.concurrent.Lock methods
category.prefix.00216=lock()\u2013unlock() matches
category.prefix.00217=unsupported lock model(s)

result.00200=single-threaded constructor supported
result.00201=Field reference "%s" may be to a shared unprotected object
result.00202=Receiver "%s" may be a shared unprotected object
result.00203=Lock "%1$s" held when accessing %2$s
result.00204=Lock "%1$s" held as "%3$s" when accessing %2$s
result.00205=Lock "%1$s" not held when accessing %2$s
result.00206=Lock "%1$s", needed for accessing %2$s, is not held within the anonymous class and cannot be resolved in the calling context; lock must be held within the anonymous class
result.00207=Lock "%1$s" held when invoking %2$s; precondition satisfied
result.00208=Lock "%1$s" held as "%3$s" when invoking %2$s; precondition satisfied
result.00209=Lock "%1$s" not held when invoking %2$s; precondition unsatisfied
result.00210=Lock specification "%s" cannot be resolved in the calling context for %s; precondition unsatisfied
result.00211=Lock "%1$s" held when invoking %2$s
result.00212=Lock "%1$s" held as "%3$s" when invoking %2$s
result.00213=Lock "%1$s" not held when invoking %2$s
result.00214=Return statement correctly returns lock "%s"
result.00215=Return statement expected to return lock "%s"
result.00216=Synchronized method %s: "this" is not identifiable as a programmer-declared lock
result.00217=Synchronized method %s: "%s.class" is not identifiable as a programmer-declared lock
result.00218=Locks %s not needed by body of synchronized block
result.00219=Lock expression "%s" is not final
result.00220=Lock expression "%s" does not name a programmer-declared lock; consider declaring what state is protected by the referenced lock
result.00221=Acquisition of lock "%s" may be redundant
result.00222=Using a java.util.concurrent.locks lock object "%s" in a synchronized statement
result.00223="%s" does not call a method from java.util.concurrent.locks.Lock
result.00224="%s" does not call a method from java.util.concurrent.locks.ReadWriteLock
result.00225=The object referenced by "%s" is not a known lock, but its field %s is a java.util.concurrent lock.
result.00226=The object referenced by "%s" is not a known lock, but its fields %s are java.util.concurrent locks.
result.00227=The object referenced by "%s" is not a known lock, but its field "%s" is declared to be java.util.concurrent lock "%s".
result.00228=%s() call has a different number of matching unlock() calls along different control paths
result.00229=%s() call has no matching unlock() calls
result.00230=%s() call has matching unlock() call at line %s
result.00231=unlock() call has a different number of matching lock() calls along different control paths
result.00232=unlock() call has no matching lock() calls
result.00233=unlock() call has matching %s() call at line %s
result.00234=Method effect %s affects region %s of %s which is aggregated into region %s
result.00235=Constructor "%s" is single-threaded
result.00236=Analyzed on behalf of constructor %s
result.00237=Enclosing constructor %s is single-threaded
result.00238=Enclosing constructor %s cannot be proven to be single-threaded
result.00239=Field Declaration: %s
result.00240=Assuming lock %s is held
result.00241=Intrinsic lock %s is held
result.00242=java.util.concurrent lock %s is held
result.00243=Lock "%1$s", needed for invoking %2$s, is not held within the anonymous class and cannot be resolved in the calling context; lock must be held within the anonymous class; precondition unsatisfied
result.00244=Lock "%1$s", needed for invoking %2$s, is not held within the anonymous class and cannot be resolved in the calling context; lock must be held within the anonymous class
result.00245=Acting as if lock "%1$s" were held when accessing %2$s (occurs within a class initializer)
result.00246=Acting as if lock "%1$s" were held when accessing %2$s (occurs within a thread-confined constructor)
result.00247=Acting as if lock "%1$s" were held as "%3$s" when accessing %2$s (occurs within a class initializer)
result.00248=Acting as if lock "%1$s" were held as "%3$s" when accessing %2$s (occurs within a thread-confined constructor)
result.00249=Acting as if lock "%1$s" were held when invoking %2$s (occurs within a class initializer); precondition satisfied
result.00250=Acting as if lock "%1$s" were held when invoking %2$s (occurs within a thread-confined constructor); precondition satisfied
result.00251=Acting as if lock "%1$s" were held as "%3$s" when invoking %2$s (occurs within a class initializer); precondition satisfied
result.00252=Acting as if lock "%1$s" were held as "%3$s" when invoking %2$s (occurs within a thread-confined constructor); precondition satisfied
result.00253=Acting as if lock "%1$s" were held when invoking %2$s (occurs within a class initializer)
result.00254=Acting as if lock "%1$s" were held when invoking %2$s (occurs within a thread-confined constructor)
result.00255=Acting as if lock "%1$s" were held as "%3$s" when invoking %2$s (occurs within a class initializer)
result.00256=Acting as if lock "%1$s" were held as "%3$s" when invoking %2$s (occurs within a thread-confined constructor)
result.00257=Lock field "%s" is less visible than region "%s"; consider protecting a less visible region or adding a lock getter method
result.00258=Sorry, analysis does not yet support the use of qualified receivers as lock objects

misc.00200=by borrowed receiver
misc.00201=by unique return
misc.00202=by effects


# Uniqueness assurance (0030)
category.prefix.00300=Unique precondition(s) satisfied
category.prefix.00301=Unique precondition(s) unsatisfied

result.00300=Control flow of %s %s
result.00301=Unique return value of call %s
result.00302=Borrowed parameters of call %s
result.00303=Unique parameters of call %s
result.00304=Effects of call %s
result.00305=Assurance conservatively depends on other annotations
result.00306=Assurance conservatively depends on the unique fields accessed in method %s
result.00307=Assurance conservatively depends on the unique parameters of method %s
result.00308=Uniqueness preconditions satisfied when calling %s
result.00309=Uniqueness preconditions not satisfied when calling %s
result.00310=May depend on unique return value of %s
result.00311=May depend on unique object constructed by %s  
#00312=
#00313=
#00314=
#00315=
#00316=
#00317=
#00318=
#00319=


# Layers analysis (0035)
category.prefix.00350=static structure

result.00350=Prohibited reference to %s
result.00351=All types referenced by %s are permitted
result.00352=Permitted reference from %s 
result.00353=Layer creates a cycle by referring to %s
result.00354=This type may be involved
result.00355=Typeset %s may be involved


# ThreadSafe analysis (0040)
result.00400=Declared type is primitive
result.00401=Field %s is final and is threadsafe
result.00402=Field %s is volatile and is threadsafe
result.00403=Field %s is protected by lock %s and is threadsafe
result.00404=Field %s is a uniquely referenced, containable object that is aggregated into lock-protected regions

result.00405=Field %s cannot be accessed in a thread-safe manner: field must be final, volatile, or protected by a lock
result.00406=The object referenced by field %s cannot be accessed in a thread-safe manner


# Containable messages (0045)
result.00450=Constructor %s contains the created object: return value is declared to unique
result.00451=Constructor %s contains the created object: receiver is declared to be borrowed
result.00452=Constructor %s does not contain the created object: return value is not declared to be unique
result.00453=Method %s does contain its receiver: receiver is declared to be borrowed
result.00454=Method %s does not contain its receiver: receiver is not declared to be borrowed
result.00455=Field %s is contained: type is primitive
result.00456=Field %s is contained: referenced object is unique, aggregated, and containable
result.00457=Field %s is not contained
result.00458=Declared type of field is not containable
result.00459=Field is not declared to be unique
result.00460=Field is not declared to aggregate the state of the referenced object
result.00461=Field %s is contained: vouched to be



# Immutable messages (0048)
result.00480=Field %s is final and primitive
result.00481=Field %s is not final
result.00482=Field %s is final and references an immutable type
result.00483=Field %s is final but does not reference an immutable type
result.00484=Field %s is not final and does not reference an immutable type
result.00485=Field %s is vouched to be immutable



# Testing Analyses (0050)
category.prefix.00500=BCACategory
category.prefix.00510=CMCategory
category.prefix.00520=LVCategory
category.prefix.00530=Non Null
category.prefix.00540=Types

result.00500=%s binds to %s
result.00510=Calls %s from line %d
result.00520=%s: Local %s; External %s
result.00530=%s IS NOT null
result.00531=%s may be null
result.00540=Expression "%s" has type "%s" (a %s)
