#  XXXXX                          XXXXX                      X
# X     X                           X
# X                                 X
# X       XX  XX  XXX XX   XXXXX    X      XXXXX   XXXXXX  XXX     XXXXX
#  XXXXX   X   X    XX  X X     X   X     X     X X    X     X    X     X
#       X  X   X    X     XXXXXXX   X     X     X X    X     X    X
#       X  X   X    X     X         X     X     X X    X     X    X
# X     X  X  XX    X     X     X   X   X X     X  XXXXX     X    X     X
#  XXXXX    XX XX XXXXX    XXXXX  XXXXXXX  XXXXX       X   XXXXX   XXXXX
#                                                      X
#                                                  XXXX
#

#------------------------------------------------------------------------
# JSure Analysis Result Messages
#
# Please keep in numerical order
#------------------------------------------------------------------------
# Thread effects (0000)
00001=No threads started within %s
00002=Thread effect declaration prohibits: %s
00003=Call "%s" promises to start nothing
00004=Call "%s" does not promise to start nothing

# Concurrency detector (0005)
00050=%s instance created
00051=%s started

# Various drops (0010)
00100=RegionLock %s is %s protects %s  on  %s
00101=PolicyLock %s is %s  on  %s
00102=%s  on  %s
00103=AggregateInRegion(%s)  on  %s
00104=AssumedFinal  on  %s
00105=Borrowed(%s)  on  %s
00106=Immutable  on  %s
00107=InRegion(%s)  on  %s
00108=InRegion(%s into %s)
00109=NotThreadSafe  on  %s
00110=NotUnique  on  %s
00111=ReturnsLock %s  on  %s
00112=ThreadSafe  on  %s
00113=SingleThreaded  on  %s
00114=Starts(nothing)  on  %s
00115=Unique  on  %s
00116=Unique(%s)  on  %s
00117=Region %s%s %s
#00118=
#00119=
#00120=

# Effects (0015)
00150="%s" not accounted for by declared effect(s)
00151="%s" checked by "%s"
00152=Empty effects trivially satisfy declared effects
00153="%s" checked by constructor rule: writes to a newly created object are invisible
00154=Parameter "%s" bound to "%s"
00155=No effects from calling %s

# Lock assurance (0020)
00200=single-threaded constructor supported
00201=Field reference "%s" may be to a shared unprotected object
00202=Receiver "%s" may be a shared unprotected object
00203=Lock "%1$s" held when accessing %2$s
00204=Lock "%1$s" held as "%3$s" when accessing %2$s
00205=Lock "%1$s" not held when accessing %2$s
00206=Lock "%1$s", needed for accessing %2$s, is not held within the anonymous class and cannot be resolved in the calling context; lock must be held within the anonymous class
00207=Lock "%1$s" held when invoking %2$s; precondition satisfied
00208=Lock "%1$s" held as "%3$s" when invoking %2$s; precondition satisfied
00209=Lock "%1$s" not held when invoking %2$s; precondition unsatisfied
00210=Lock specification "%s" cannot be resolved in the calling context for %s; precondition unsatisfied
00211=Lock "%1$s" held when invoking %2$s
00212=Lock "%1$s" held as "%3$s" when invoking %2$s
00213=Lock "%1$s" not held when invoking %2$s
00214=Return statement correctly returns lock "%s"
00215=Return statement expected to return lock "%s"
00216=Synchronized method %s: "this" is not identifiable as a programmer-declared lock
00217=Synchronized method %s: "%s.class" is not identifiable as a programmer-declared lock
00218=Locks %s not needed by body of synchronized block
00219=Lock expression "%s" is not final
00220=Lock expression "%s" does not name a programmer-declared lock; consider declaring what state is protected by the referenced lock
00221=Acquisition of lock "%s" may be redundant
00222=Using a java.util.concurrent.locks lock object "%s" in a synchronized statement
00223="%s" does not call a method from java.util.concurrent.locks.Lock
00224="%s" does not call a method from java.util.concurrent.locks.ReadWriteLock
00225=The object referenced by "%s" is not a known lock, but its field %s is a java.util.concurrent lock.
00226=The object referenced by "%s" is not a known lock, but its fields %s are java.util.concurrent locks.
00227=The object referenced by "%s" is not a known lock, but its field "%s" is declared to be java.util.concurrent lock "%s".
00227=%s() call has a different number of matching unlock() calls along different control paths
00228=%s() call has no matching unlock() calls
00229=%s() call has matching unlock() call at line %s
00230=unlock() call has a different number of matching lock() calls along different control paths
00231=unlock() call has no matching lock() calls
00232=unlock() call has matching %s() call at line %s
00233=Method effect %s affects region %s of %s which is aggregated into region %s
00234=Constructor "%s" is single-threaded
00235=Analyzed on behalf of constructor %s
00236=Enclosing constructor %s is single-threaded
00237=Enclosing constructor %s cannot be proven to be single-threaded
00238=Field Declaration: %s
00239=Assuming lock %s is held
00240=Intrinsic lock %s is held
00241=java.util.concurrent lock %s is held
00242=Lock "%1$s", needed for invoking %2$s, is not held within the anonymous class and cannot be resolved in the calling context; lock must be held within the anonymous class; precondition unsatisfied
00243=Lock "%1$s", needed for invoking %2$s, is not held within the anonymous class and cannot be resolved in the calling context; lock must be held within the anonymous class
00244=Acting as if lock "%1$s" were held when accessing %2$s (occurs within a class initializer)
00245=Acting as if lock "%1$s" were held when accessing %2$s (occurs within a thread-confined constructor)
00246=Acting as if lock "%1$s" were held as "%3$s" when accessing %2$s (occurs within a class initializer)
00247=Acting as if lock "%1$s" were held as "%3$s" when accessing %2$s (occurs within a thread-confined constructor)
00248=Acting as if lock "%1$s" were held when invoking %2$s (occurs within a class initializer); precondition satisfied
00249=Acting as if lock "%1$s" were held when invoking %2$s (occurs within a thread-confined constructor); precondition satisfied
00250=Acting as if lock "%1$s" were held as "%3$s" when invoking %2$s (occurs within a class initializer); precondition satisfied
00251=Acting as if lock "%1$s" were held as "%3$s" when invoking %2$s (occurs within a thread-confined constructor); precondition satisfied
00252=Acting as if lock "%1$s" were held when invoking %2$s (occurs within a class initializer)
00253=Acting as if lock "%1$s" were held when invoking %2$s (occurs within a thread-confined constructor)
00254=Acting as if lock "%1$s" were held as "%3$s" when invoking %2$s (occurs within a class initializer)
00255=Acting as if lock "%1$s" were held as "%3$s" when invoking %2$s (occurs within a thread-confined constructor)

00256=Lock field "%s" is less visible than region "%s"; consider protecting a less visible region or adding a lock getter method


# Uniqueness assurance (0030)
00300=Control flow of %s %s
00301=Unique return value of call %s
00302=Borrowed parameters of call %s
00303=Unique parameters of call %s
00304=Effects of call %s
00305=Assurance conservatively depends on other annotations
00306=Assurance conservatively depends on the unique fields accessed in method %s
00307=Assurance conservatively depends on the unique parameters of method %s
00308=Uniqueness preconditions satisfied when calling %s
00309=Uniqueness preconditions not satisfied when calling %s
00310=May depend on unique return value of %s
00311=May depend on unique object contructed by %s  
#00312=
#00313=
#00314=
#00315=
#00316=
#00317=
#00318=
#00319=

# Layers analysis (0035)
00350=Prohibited reference to %s
00351=All types referenced by %s are permitted
00352=Permitted reference from %s 
00353=Layer creates a cycle by referring to %s
00354=This type may be involved
00355=Typeset %s may be involved